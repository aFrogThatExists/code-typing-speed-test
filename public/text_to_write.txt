"use client";
import TextDisplay from "@/components/TextDisplay";
import TypingArea from "@/components/TypingArea";
import TimeDisplay from "@/components/TimeDisplay";
import ResultsDisplay from "@/components/ResultsDisplay";
import { useEffect, useState } from "react";
export default function TextDisplay({ text, correct, wrong }) {
return (
<div className=" m-2 p-3 border border-gray-900 rounded-sm">
{
text.split("").map((char, index) => {
char = char.replace(" ", "\xa0")
if (index < (correct)) return <span key={index} className="font-bold">{char == "\n" ? <br /> : char}</span>
else if (index < (correct + wrong)) return <span key={index} className="text-red-700 font-bold bg-orange-300">{char == "\n" ? <>â†µz<br /></> : char}</span>
else return <span key={index}>{char == "\n" ? <br /> : char}</span>
})
}
</div>
)
}
export default function TimeDisplay({ time }) {
return (
<div className=" m-2 p-3 border border-gray-900 rounded-sm">
{time}
</div>
)
}
export default function Home() {
const [textToWrite, setTextToWrite] = useState("");
const [writtenText, setWrittenText] = useState("");
const [correctCounter, setCorrectCounter] = useState(0);
const [timePassed, setTimePassed] = useState(0);
const wrongCounter = writtenText.length - correctCounter
const [totalWrongs, setTotalWrongs] = useState(0);
const [timeStopped, setTimeStopped] = useState(false);
function addTotalWrong() {
setTotalWrongs(totalWrongs + 1)
}
function getCorrectCharacters(text) {
for (let i = 0; i < text.length; i++) {
if (textToWrite.charAt(i) != text.charAt(i)) {
return i;
}
}
return text.length
}
function onWrittenText(text) {
setWrittenText(text)
const correct = getCorrectCharacters(text)
setCorrectCounter(correct)
if (correct == textToWrite.length) onTextFinished()
}
function onTextFinished() {
setTimeStopped(true)
}
function runTimer() {
setTimeout(() => {
if (timeStopped) return
setTimePassed(timePassed + 0.1);
}, 100);
}
useEffect(() => {
runTimer();
}, [timePassed]);
useEffect(() => {
const index = Math.floor(Math.random() * (textToWrite.length))
fetch("/text_to_write/1.txt").then((response) => response.text()).then((text) => {
console.log(text.split("\n").slice(index, index + 10).join("\n"))
setTextToWrite(text.split("\n").slice(index, index + 10).join("\n"))
})
}, [])
return (
<div className="mt-2 flex flex-col items-center justify-center">
<h1 className="text-3xl ">Typing test for programmers</h1>
<TimeDisplay time={timePassed.toFixed(1)} />
<TextDisplay text={textToWrite} correct={correctCounter} wrong={wrongCounter} />
<TypingArea text={writtenText} setText={onWrittenText} addWrong={addTotalWrong} locked={timeStopped} />
{
timeStopped ? <ResultsDisplay time={timePassed.toFixed(1)} wpm={(textToWrite.replace(/[-+.,=]/g, " ").split(" ").length / (timePassed / 60)).toFixed(1)} accuracy={((correctCounter / (correctCounter + totalWrongs)) * 100).toFixed(1)} />
: ""
}
</div>
);
}
